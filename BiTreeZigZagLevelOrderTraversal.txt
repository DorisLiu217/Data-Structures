/*Binary Tree Zigzag Level Order Traversal*/
/*Given a binary tree, return the zigzag level order traversal of its nodes' values.
(ie, from left to right, then right to left for the next level and alternate between).*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new LinkedList<List<Integer>>();
        if(root == null) return list;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        
        for(int i = 0; !queue.isEmpty(); i++){
            LinkedList<Integer> sub = new LinkedList<>();
            int num = queue.size();
            for(int j = 0; j < num; j++){
                    TreeNode temp = queue.poll();
                    if(i % 2 == 0) sub.add(temp.val);
                    else sub.add(0, temp.val);
                    
                    if(temp.left != null) queue.add(temp.left);
                    if(temp.right != null) queue.add(temp.right); 
            }
            list.add(sub);
        }
        return list;
    }
}