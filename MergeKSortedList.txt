/*Merge K Sorted List*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length == 0) return null;
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        
        PriorityQueue<ListNode> queue = new PriorityQueue(lists.length, new Comparator<ListNode>(){
             @Override
             public int compare(ListNode a, ListNode b){
                 if(a.val < b.val)
                     return -1;
                 else if(a.val > b.val)
                     return 1;
                 else
                     return 0;
             }
        });
        
        for(ListNode list:lists){
            if(list != null){
                queue.add(list);
            }
        }
        while(!queue.isEmpty()){
            ListNode temp = queue.poll();
            if(temp.next != null){
                queue.add(temp.next);
            }
            cur.next = temp;
            cur = cur.next;
        }
        cur.next = null;
        return dummy.next;
    }
}