/*Reverse Linked List*/
/*Iterative Solution*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null) return head;
        ListNode pre = null;
        while(head != null){
            ListNode next = head.next;
            head.next = pre;
            pre = head;
            head = next;
        }
       return pre;
    }
}
/*Recursive Solution*/
public class Solution {
    public ListNode reverseList(ListNode head) {
        return recurList(head, null);
    }
    public ListNode recurList(ListNode head, ListNode pre){
        if(head == null){ 
            return pre;
        }
        ListNode next = head.next;
        head.next = pre;
        return recurList(next, head);
    }
}