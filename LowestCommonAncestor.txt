/*Lowest Common Ancestor in Binary Search Tree*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        TreeNode cur = root;
        if(root == null) return null;
        
        if(p.val>cur.val && q.val>cur.val){
            return lowestCommonAncestor(cur.right, p, q);
        }
        else if(p.val<cur.val && q.val<cur.val){
            return lowestCommonAncestor(cur.left, p, q);
        }
        return cur;
    }
}